<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:a4j="http://richfaces.org/a4j"
                xmlns:rich="http://richfaces.org/rich">

    <p>This is exactly the same tree, but now it uses "client" switch type. Note, that all nodes actually rendered up-front and expand/collapse now do not requre server call</p><br/>
    <h:form id="clientTreeForm">
        <rich:tree id="clientTree" switchType="client" style="width:300px" value="#{library.data}" var="item" nodeFace="#{item.type}">
            <rich:treeNode id="clientTreeArtistNode" type="artist" iconLeaf="/images/tree/singer.gif" icon="/images/tree/singer.gif">
                <h:commandLink id="artistLink" value="#{item.name}">
                    <f:param name="clientTreeNodeValue" value="#{item.name}"/>
                </h:commandLink>
            </rich:treeNode>
            <rich:treeNode id="clientTreeAlbumNode" type="album" iconLeaf="/images/tree/disc.gif" icon="/images/tree/disc.gif">
                <h:commandLink id="albumLink" value="#{item.title}">
                    <f:param name="clientTreeNodeValue" value="#{item.title}"/>
                </h:commandLink>
            </rich:treeNode>
            <rich:treeNode id="clientTreeSongNode" type="song" iconLeaf="/images/tree/song.gif" icon="/images/tree/song.gif">
                <h:commandLink id="songLink" value="#{item.title}">
                    <f:param name="clientTreeNodeValue" value="#{item.title}"/>
                </h:commandLink>
            </rich:treeNode>
        </rich:tree>
    </h:form>


</ui:composition>